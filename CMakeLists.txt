CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

PROJECT(OpenGLCPP LANGUAGES CXX C)

INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/cmake/all.cmake)


FIND_PACKAGE(glfw3 REQUIRED)
FIND_PACKAGE(glm REQUIRED)
FIND_PACKAGE(ASSIMP REQUIRED)
FIND_PROGRAM (glad_binary glad)
IF(NOT glad_binary)
  message(FATAL_ERROR "no glad found")
ENDIF()

SET(glad_DIR ${CMAKE_CURRENT_BINARY_DIR}/glad)
ADD_CUSTOM_COMMAND(OUTPUT ${glad_DIR}/src/glad.c COMMAND ${glad_binary} --no-loader --reproducible --profile core --generator=c --spec gl --out-path=${glad_DIR})
FIND_LIBRARY(cxxfs_lib NAMES stdc++fs PATHS /usr/lib/gcc/x86_64-linux-gnu/8/)

FILE(GLOB HRDS ${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp)
FILE(GLOB SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)

ADD_LIBRARY(OpenGLCPP SHARED ${SOURCE})
TARGET_SOURCES(OpenGLCPP PRIVATE ${glad_DIR}/src/glad.c)
SET_TARGET_PROPERTIES(OpenGLCPP PROPERTIES PUBLIC_HEADER "${HRDS}")

TARGET_LINK_LIBRARIES(OpenGLCPP PUBLIC glfw ${CMAKE_DL_LIBS} glm)
IF(cxxfs_lib)
  TARGET_LINK_LIBRARIES(OpenGLCPP PUBLIC ${cxxfs_lib})
ENDIF()
TARGET_INCLUDE_DIRECTORIES(OpenGLCPP PRIVATE ${glad_DIR}/include)
TARGET_INCLUDE_DIRECTORIES(OpenGLCPP PRIVATE ${ASSIMP_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(OpenGLCPP PRIVATE ${ASSIMP_LIBRARIES})

# install lib
INSTALL(TARGETS OpenGLCPP EXPORT ${PROJECT_NAME}Targets
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
  PUBLIC_HEADER DESTINATION include/opengl_cpp/
  COMPONENT library
  INCLUDES DESTINATION include
  )

install(DIRECTORY ${glad_DIR}/include/glad DESTINATION include/opengl_cpp/ FILES_MATCHING PATTERN "*.h")

# install cmake config file
INSTALL(EXPORT ${PROJECT_NAME}Targets
  FILE ${PROJECT_NAME}Config.cmake
  DESTINATION lib/cmake/${PROJECT_NAME})
